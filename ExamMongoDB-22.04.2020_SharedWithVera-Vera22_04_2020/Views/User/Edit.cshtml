
@inject UserManager<Student> _userManager;
@using ExamMongoDB.Identity
@using Microsoft.AspNetCore.Identity
@using ExamMongoDB.Models.Repositories;
@using ExamMongoDB.ViewModels;
@model ExamMongoDB.ViewModels.UserViewModel
@*Edited by Tareq*@
@*@inject IExamEnrollmentRepository examEnrollmentRepository*@

@{
    ViewData["Title"] = "Edit";
}
<section>
    <div class="row">
        <div class="col-12">
            <a asp-action="Index">Back to List</a>
        </div>
    </div>
</section>
<section>
    <div class="row">
        <div class="col-md-4">
            <section>
                <form asp-action="Edit">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    <div class="form-group">
                        <label asp-for="UserName" class="control-label"></label>
                        <input asp-for="UserName" class="form-control" />
                        <span asp-validation-for="UserName" class="text-danger"></span>
                    </div>
                    @*<div class="form-group">
                        <label asp-for="SecurityStamp" class="control-label"></label>
                        <input asp-for="SecurityStamp" class="form-control" />
                        <span asp-validation-for="SecurityStamp" class="text-danger"></span>
                    </div>*@


                    <div class="form-group">
                        <label asp-for="Email" class="control-label"></label>
                        <input asp-for="Email" class="form-control" />
                        <span asp-validation-for="Email" class="text-danger"></span>
                    </div>

                    <div class="form-group">
                        <label asp-for="Fname" class="control-label"></label>
                        <input asp-for="Fname" class="form-control" />
                        <span asp-validation-for="Fname" class="text-danger"></span>
                    </div>

                    <div class="form-group">
                        <label asp-for="Lname" class="control-label"></label>
                        <input asp-for="Lname" class="form-control" />
                        <span asp-validation-for="Lname" class="text-danger"></span>
                    </div>




                    @*<div class="form-group">
          <div class="checkbox">
            <label>
              <input asp-for="EmailConfirmed" /> @Html.DisplayNameFor(model => model.EmailConfirmed)
            </label>
          </div>
        </div>*@
                    <div class="form-group">
                        <label asp-for="PhoneNumber" class="control-label"></label>
                        <input asp-for="PhoneNumber" class="form-control" />
                        <span asp-validation-for="PhoneNumber" class="text-danger"></span>
                    </div>
                    @*<div class="form-group">
            <div class="checkbox">
                <label>
                    <input asp-for="PhoneNumberConfirmed" /> @Html.DisplayNameFor(model => model.ExamEnrollment[1].Enrolled)
                </label>
            </div>
        </div>*@



                    @*<div class="form-group">
          <div class="checkbox">
            <label>
              <input asp-for="TwoFactorEnabled" /> @Html.DisplayNameFor(model => model.TwoFactorEnabled)
            </label>
          </div>
        </div>
        <div class="form-group">
          <div class="checkbox">
            <label>
              <input asp-for="LockoutEnabled" /> @Html.DisplayNameFor(model => model.LockoutEnabled)
            </label>
          </div>
        </div>*@
                    @*<div class="form-group">
          <label asp-for="AccessFailedCount" class="control-label"></label>
          <input asp-for="AccessFailedCount" class="form-control" />
          <span asp-validation-for="AccessFailedCount" class="text-danger"></span>
        </div>*@

                    <input type="hidden" value="@Model.Id" name="Id" />
                    <input type="hidden" value="@Model.PasswordHash" name="PasswordHash" />
                    <input type="hidden" value="@Model.AuthenticatorKey" name="AuthenticatorKey" />
                    <input type="hidden" value="@Model.NormalizedEmail" name="NormalizedEmail" />
                    <input type="hidden" value="@Model.NormalizedUserName" name="NormalizedUserName" />
                    <input type="hidden" value="@Model.UserName" name="UserName" />
                    <input type="hidden" value="@Model.Email" name="Email" />
                    <input type="hidden" value="@Model.Fname" name="Fname" />
                    <input type="hidden" value="@Model.Lname" name="Lname" />
                    <input type="hidden" value="@Model.PhoneNumber" name="PhoneNumber" />
                    <input type="hidden" value="@Model.SecurityStamp" name="SecurityStamp" />
                    @*<input type="hidden" value="@Model.Roles" name="Roles" />*@
                    @*<input type="hidden" value="@Model.ExamEnrollment" name="ExamEnrollment" />
          <input type="hidden" value="@Model.Programmes.ProgrammeName" name="ProgrammeName" />*@


                    @Html.AntiForgeryToken()

                    <div class="form-group">
                        <input type="submit" value="Save" class="btn btn-default" />
                    </div>
                </form>
            </section>
        </div>

        <div class="col-md-4">
            <div class="row">
                <section>
                    <form method="post" action="/user/addToRole">
                        <input type="hidden" name="userName" value="@Model.UserName" />
                        <div class="form-group">
                            <input type="text" name="roleName" class="form-control" placeholder="Role name" />
                        </div>
                        <div class="form-group">
                            <input type="submit" class="btn btn-primary" value="Add to role" />
                        </div>
                    </form>
                </section>
                <section>
                    <h3>User roles</h3>
                    @{
                        var dbUser = await _userManager.FindByIdAsync(Model.Id);
                        var roles = await _userManager.GetRolesAsync(dbUser);
                    }
                    <ul>
                        @foreach (var role in roles)
                        {
                            <li>@role</li>
                        }
                    </ul>
                </section>
            </div>
            <div class="row">
                <section>
                    <h4>Check user in role</h4>
                    <form method="post" action="/user/checkinrole">
                        <input type="hidden" name="userName" value="@Model.UserName" />
                        <div class="form-group">
                            <input type="text" name="roleName" class="form-control" placeholder="Role name" />
                        </div>
                        <div class="form-group">
                            <input type="submit" class="btn btn-primary" value="Check if in role" />
                        </div>
                    </form>
                </section>
            </div>
        </div>
    </div>
</section>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
